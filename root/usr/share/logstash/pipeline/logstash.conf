input {
	file {
		id => "apache-access"
		tags => [ "apache-access" ]
		path => "/home/domains/*/sd/*/logs/access_log"
		start_position => "end"
	}
	file {
		id => "apache-error"
		tags => [ "apache-error" ]
		path => "/home/domains/*/sd/*/logs/error_log"
		start_position => "end"
	}
}

filter {
	# Apache access log
	if "apache-access" in [tags] {
		grok {
			match => [
				"message", "%{COMBINEDAPACHELOG}",
				"path", "/domains/(?<domain>[^/]+)/sd/(?<subdomain>[^/]+)/"
			]
			break_on_match => false
		}
		date {
			match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
		}
		geoip {
			source => "clientip"
			target => "geoip"
		}

	# Apache error log
	} else if "apache-error" in [tags] {
		grok {
			match => [
				"message", "\[(?<timestamp>%{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{YEAR})\] \[((?<module>\w*):)?%{WORD:severity}\] (\[pid %{INT:pid}:tid %{INT:tid}\] )?(\(%{INT:errcode}\)%{DATA:errmsg}: )?(\[client %{IPORHOST:clientip}(:%{POSINT})?\] )?%{DATA:logmsg}(, referer: %{URI:referrer})?$",
				"path", "/domains/(?<domain>[^/]+)/sd/(?<subdomain>[^/]+)/"
			]
			break_on_match => false
		}
		date {
			match => [ "timestamp", "EEE MMM dd HH:mm:ss.SSSSSS yyyy", "EEE MMM dd HH:mm:ss yyyy" ]
		}
		geoip {
			source => "clientip"
			target => "geoip"
		}
	}
}

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
	}
}
